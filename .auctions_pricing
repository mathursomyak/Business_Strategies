__author__ = 'skmathur'
import random
import pylab as P
import matplotlib.pyplot as plt
import numpy as np

#_________________________
# QUESTION 1.1
#-------------------------
'''
print 'QUESTION 1.1 - see plot in other window'
#beta distribution
alpha, beta = 2,2
betadistr=[]
for i in range(10000):
    betadistr.append(random.betavariate(alpha, beta))
mu, sigma = 200, 25

# the histogram of PDF the data with histtype='step'
n, bins, patches = P.hist(betadistr, 100, normed=1, histtype='stepfilled')
P.setp(patches, 'facecolor', 'black', 'alpha', 0.65)
P.show()
'''
#_________________________
# QUESTION 1.2
#-------------------------
print 'QUESTION 1.2'
print 'The PDF of the special auction will look more like the beta distribution where' \
      'alpha and beta are 1/2. There are a few people who will value each item highly, but' \
      'most will have values near zero.'

#_________________________
# QUESTION 2.1
#-------------------------
print 'QUESTION 2.1'

#Second Price Auction Function
def secondprice(n_bidders,alpha=0.5,beta=0.5):
    bids=[]
    for i in range(n_bidders):
        bids.append(random.betavariate(alpha, beta))
    bids.sort()
    revenue = bids[-2]
    return revenue

#Run the simulation for both beta distributions
n_bidders = [2,3,4,5,10,20] #the different numbers of bidders we test
graphdata = []  #collection of the resulting simulated revenues
for n in n_bidders:
    revenue_normal,revenue_special=[],[]
    for i in range(50): #to get the average of 10 auctions
        revenue_normal.append(secondprice(n,2,2))
        revenue_special.append (secondprice(n,.5,.5))
    revenue_normal_avg,revenue_special_avg= np.mean(revenue_normal), np.mean(revenue_special)
    revenue_normal_std,revenue_special_std= np.std(revenue_normal), np.std(revenue_special)
    graphdata.append([n, revenue_special_avg, revenue_normal_avg, revenue_special_std, revenue_normal_std])
graphdata = np.array(graphdata)
print 'n bidders\tspecialty revenue\tnormal\tsp standev\tnorm standev\n',graphdata

#Plot the graph data to compare revenue between the 2 beta distributions
special = plt.plot(n_bidders,graphdata[::,1])
plt.fill_between(n_bidders, graphdata[::,1]-graphdata[::,3], graphdata[::,1]+graphdata[::,3], facecolor='yellow', alpha=0.25)
normal = plt.plot(n_bidders,graphdata[::,2])
plt.fill_between(n_bidders, graphdata[::,2]-graphdata[::,4], graphdata[::,2]+graphdata[::,4], facecolor='orange', alpha=0.25)
plt.title('House Revenue by Number of Bidders')
plt.xlabel('Number of Bidders')
plt.ylabel('Auction House Revenue')
plt.legend( (special[0], normal[0]), ('Special', 'Normal') )
plt.show()
